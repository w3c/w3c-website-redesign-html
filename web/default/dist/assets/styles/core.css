/*------------------------------------*\
    #Apollo: core styles for all browsers
\*------------------------------------*/
/*------------------------------------*\
    #Settings
\*------------------------------------*/
/*------------------------------------*\
    #Breakpoints

    The measurements presented here are for guidance only
    and should be updated to reflect the design/content needs.
\*------------------------------------*/
/*------------------------------------*\
    #Colors
\*------------------------------------*/
/**
Base colors that can be used when prototyping. Taken from http://clrs.cc/

1. We ideally avoid using pure white on pure black, because the contrast is
so great that it creates the illusion that text is vibrating on screen.
 */
/* 1 */
/* 1 */
/**
Theme colors.
 */
/**
Sass variables.
 */
/**
Social media colours that might be useful.
See: https://brandcolors.net/
 */
/*------------------------------------*\
    #Fonts
\*------------------------------------*/
@font-face {
  font-display: fallback;
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 400;
  src: url("../fonts/notosans/notosans-regular.woff2") format("woff2"), url("../fonts/notosans/notosans-regular.woff") format("woff"); }

@font-face {
  font-display: fallback;
  font-family: 'Noto Sans';
  font-style: italic;
  font-weight: 400;
  src: url("../fonts/notosans/notosans-italic.woff2") format("woff2"), url("../fonts/notosans/notosans-italic.woff") format("woff"); }

@font-face {
  font-display: fallback;
  font-family: 'Noto Sans';
  font-style: normal;
  font-weight: 600;
  src: url("../fonts/notosans/notosans-bold.woff2") format("woff2"), url("../fonts/notosans/notosans-bold.woff") format("woff"); }

@font-face {
  font-display: fallback;
  font-family: 'Noto Sans';
  font-style: italic;
  font-weight: 600;
  src: url("../fonts/notosans/notosans-bolditalic.woff2") format("woff2"), url("../fonts/notosans/notosans-bolditalic.woff") format("woff"); }

/*------------------------------------*\
    #Paths
\*------------------------------------*/
/*------------------------------------*\
    #Typesetting
\*------------------------------------*/
/**
Use https://www.cssfontstack.com/ and https://meowni.ca/font-style-matcher/ to pick
system fonts that are reasonably close to any web fonts needed for the project.

This improves performance, avoids Flash Of Invisible Text (FOIT) and minimises
Flash of Unstyled Content (FOUC) - see https://helenvholmes.com/writing/type-is-your-right/

Be sure to include fonts for both Mac OS and Windows. Use quote marks around
fonts with white space in their name.

When Font Face Observer has detected that the @font-face files are loaded, then we
can safely use the web fonts instead of the system fonts.
 */
/*------------------------------------*\
    #Functions
\*------------------------------------*/
/*------------------------------------*\
    #Maths functions
\*------------------------------------*/
/**
 #Random number
 http://xkcd.com/221/
 */
/**
 #Power function
 https://css-tricks.com/snippets/sass/power-function/
 */
/**
 #Square root function
 */
/*------------------------------------*\
    #CSS unit functions
\*------------------------------------*/
/**
 #em
 */
/**
 #rem
 */
/**
 #px
 */
/**
 #Return a number without a unit
 */
/**
 #Remove any unit present to return a unitless number
 */
/*------------------------------------*\
    #Mixins
\*------------------------------------*/
/*------------------------------------*\
    #Font sizes
\*------------------------------------*/
/*------------------------------------*\
    #Media query
\*------------------------------------*/
/*------------------------------------*\
    #Stack
\*------------------------------------*/
/**
This mixin allows us to add vertical spacing between a container's direct children,
much like the 'axiomatic owl' technique but limited to specific use cases.

By applying Flexbox to the parent container, we can use auto margin on a specific
child element. This way, we can choose to group elements inside the stack to the
top/bottom of the vertical space, which is useful for card-like components.

Use with a specific measure, or without for the default measure, e.g.

main {
	@include stack(4rem);
}

article {
	@include stack;
}
 */
/*------------------------------------*\
    #Base

    Normalize comes first for the cascade
\*------------------------------------*/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/*------------------------------------*\
    #Animation
\*------------------------------------*/
/*
 * Respect the choices of users who do not want animations.
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-play-state: paused !important;
    scroll-behavior: auto !important;
    transition: none !important; } }

/*------------------------------------*\
    #Background colours
\*------------------------------------*/
.bg--alert {
  background-color: #e93737;
  color: #000; }

.bg--success {
  background-color: #2ecc40;
  color: #000; }

.bg--warning {
  background-color: #f9dc4a;
  color: #000; }

/*------------------------------------*\
    #Quotes
\*------------------------------------*/
blockquote {
  font-size: 1.125rem;
  line-height: calc(27 / 18);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  color: #005a9c;
  -webkit-margin-start: 0.625rem;
          margin-inline-start: 0.625rem;
  padding: 1.25rem;
  position: relative; }
  blockquote > * + * {
    margin-top: 1rem; }
  blockquote > * {
    font-weight: bold; }
  blockquote cite {
    color: #111;
    font-size: 1rem;
    font-style: normal;
    font-weight: normal; }
  blockquote::before {
    background-color: #005a9c;
    border-radius: 0.3125rem;
    content: '';
    height: 100%;
    left: -0.625rem;
    position: absolute;
    top: 0;
    width: 0.625rem; }

[dir="rtl"] blockquote::before {
  left: auto;
  right: -0.625rem; }

/*------------------------------------*\
    #Body
\*------------------------------------*/
html {
  height: 100%; }

/**
 Typographical styles for fonts are in 40-base/_typography.scss
 */
body {
  background-color: #fff;
  color: #111;
  min-height: 100%;
  overflow-x: hidden;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased; }

/**
Styles needed for a sticky footer
 */
.grid-wrap {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 100%;
      grid-template-columns: 100%;
  -ms-grid-rows: 1fr auto;
      grid-template-rows: 1fr auto;
  min-height: 100vh; }

/*------------------------------------*\
    #Box sizing
\*------------------------------------*/
*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: inherit;
  margin: 0;
  overflow-wrap: break-word;
  padding: 0; }

/*------------------------------------*\
    #Buttons

    1. High contrast themes tend to eliminate background-color.
    With no border set, we need to apply a transparent outline to
    maintain the button shape. The negative outline-offset moves
    the outline inside the perimeter so it behaves like a border.
\*------------------------------------*/
button,
.button {
  background-color: #005797;
  border: none;
  border-radius: 1.5rem;
  color: #fff;
  font-size: 0.875rem;
  font-weight: 600;
  line-height: 1.5;
  outline: 1px solid transparent;
  /* 1 */
  outline-offset: -1px;
  /* 1 */
  padding: 0.75rem 1.5rem; }
  button:hover, button:focus, button:active,
  .button:hover,
  .button:focus,
  .button:active {
    background-color: #024488; }

/**
Remove link styling from links styled as buttons.
 */
.button {
  display: block;
  text-decoration: none; }

/**
Remove link styling from actual buttons styled as buttons.
 */
button.button,
input[type="submit"].button {
  text-decoration: none; }

.button--wide {
  text-align: center;
  width: 100%; }

.button--alt {
  background-color: transparent;
  border: solid 2px #005797;
  color: #005797;
  padding-bottom: 0.625rem;
  padding-top: 0.625rem; }
  .button--alt:hover, .button--alt:focus, .button--alt:active {
    border: solid 2px #024488;
    color: #fff; }

.button--ghost {
  background-color: transparent;
  color: inherit;
  font-weight: normal;
  padding-left: 0;
  padding-right: 0; }
  .button--ghost:hover, .button--ghost:focus, .button--ghost:active {
    background-color: transparent; }

.button[disabled],
.button.js-disabled {
  background-color: #bdbdbd;
  box-shadow: none;
  color: #303030;
  cursor: not-allowed; }
  .button[disabled]:hover, .button[disabled]:focus, .button[disabled]:active,
  .button.js-disabled:hover,
  .button.js-disabled:focus,
  .button.js-disabled:active {
    background-color: #bdbdbd;
    color: #303030;
    outline: 0; }

/**
Double specificity so links as buttons keep their styling even within
elements that would otherwise override it, without using !important
 */
.button--alert.button--alert {
  background-color: #e93737;
  color: #000; }
  .button--alert.button--alert:visited {
    background-color: #e93737;
    color: #000; }
  .button--alert.button--alert:hover, .button--alert.button--alert:focus, .button--alert.button--alert:active {
    background-color: #ee6565; }

.button--success.button--success {
  background-color: #2ecc40;
  color: #000; }
  .button--success.button--success:visited {
    background-color: #2ecc40;
    color: #000; }
  .button--success.button--success:hover, .button--success.button--success:focus, .button--success.button--success:active {
    background-color: #54d964; }

.button--warning.button--warning {
  background-color: #f9dc4a;
  color: #000; }
  .button--warning.button--warning:visited {
    background-color: #f9dc4a;
    color: #000; }
  .button--warning.button--warning:hover, .button--warning.button--warning:focus, .button--warning.button--warning:active {
    background-color: #fbe67b; }

/*------------------------------------*\
    #Focus
\*------------------------------------*/
:focus {
  outline: 0.125rem solid #8b0084;
  outline-offset: -0.125rem; }

/**
Where focus is moved to the target via JavaScript, it is
acceptable not to show a focus outline.
 */
main:focus,
#main:focus,
[tabindex='-1']:focus {
  outline: none; }

/*------------------------------------*\
    #Forms
\*------------------------------------*/
form {
  background-color: #e5e5e5; }

/**
Start of resets for the fieldset and legend elements - see
https://thatemil.com/blog/2015/01/03/reset-your-fieldset/
 */
fieldset {
  border: 0;
  margin-bottom: 0;
  margin-left: 0;
  margin-right: 0;
  min-width: 0;
  padding: 0; }

body:not(:-moz-handler-blocked) fieldset {
  display: table-cell; }

legend {
  display: table;
  padding: 0; }

/* Any styling that would normally go on `fieldset` should be set on the wrapper instead */
.fieldset-wrapper {
  border: 2px solid;
  border-radius: 0;
  padding: 1em;
  position: relative; }

/**
End of resets for the fieldset element
 */
/**
Default form styling

1. Make form fields inherit the document styling
 */
input,
select,
textarea {
  background-color: #fff;
  border: 2px solid #585858;
  border-radius: 0;
  color: contrast(#fafafa);
  display: block;
  font-family: inherit;
  /* 1 */
  font-size: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  padding: 0.625rem;
  width: 100%; }
  input:hover, input:focus, input:active,
  select:hover,
  select:focus,
  select:active,
  textarea:hover,
  textarea:focus,
  textarea:active {
    background-color: #fafafa;
    border-color: #111;
    outline-offset: 0; }

/**
We want these inputs to sit a little closer to their corresponding
label for increased usability by visually associating the label to its input.
 */
* + input,
* + select,
* + textarea,
* .field-description,
* .field-error,
* .segmented-group {
  margin-top: 0.3125rem; }

/**
Styling inputs
 */
input[type="checkbox"],
input[type="radio"] {
  display: inline-block;
  margin-right: 0.75em;
  width: auto; }

select {
  height: 3em; }

textarea {
  height: 10em;
  resize: vertical;
  width: 100%; }

/**
Memorable date input styles are great for dates that users already know,
such as their date of birth. We always want these fields to line up,
so we use inline-block rather than flexbox.

Making fields like these only as wide as they need to be gives
users a better visual clue as to what is required when completing them.

If you increase the input padding, remember to increase these widths.
 */
.memorable-date {
  display: inline-block;
  margin-top: 0.625rem; }

.memorable-date + .memorable-date {
  margin-left: 1rem; }

.memorable-date__day,
.memorable-date__month {
  width: 3em; }

.memorable-date__year {
  width: 4.5em; }

/**
Required fields
 */
input[required],
select[required],
textarea[required] {
  border-color: #585858;
  box-shadow: inset 2px 2px 0 0 #585858, inset 2px -2px 0 0 #585858, inset -2px -2px 0 0 #585858, inset -2px 2px 0 0 #585858; }
  input[required]:hover, input[required]:focus, input[required]:active,
  select[required]:hover,
  select[required]:focus,
  select[required]:active,
  textarea[required]:hover,
  textarea[required]:focus,
  textarea[required]:active {
    box-shadow: inset 2px 2px 0 0 #111, inset 2px -2px 0 0 #111, inset -2px -2px 0 0 #111, inset -2px 2px 0 0 #111; }

input[required]:valid {
  box-shadow: inset 0 0 0 0 #585858; }

/**
Field grouping
 */
.field + .field,
* + .fieldset-wrapper,
* + .field {
  margin-top: 2.5rem; }

.field {
  max-width: 32em;
  position: relative; }

.option-group label {
  display: block;
  width: 100%; }

/**
This goes inside the associated label. By doing it this way we are
associating the help text with the field itself whilst still keeping
a class-hook for styling.
 */
.field-description.field-description {
  color: #666;
  display: block;
  font-size: 0.8em; }

.field-label {
  display: block; }

/**
Word or character counter with aria
 */
.field-live-region {
  bottom: 1em;
  color: #666;
  font-size: 0.8em;
  margin-top: 0;
  opacity: 0;
  position: absolute;
  right: 1em;
  transition: opacity 100ms ease-in-out 300ms; }

/**
Fade in live-region on focus. Maybe this should stay visible after
the field has been completed?
 */
.field-input:focus + .field-live-region,
.field-live-region.is-completed {
  opacity: 1; }

/**
Group inputs to line up side-by-side
 */
.input-group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row nowrap;
      flex-flow: row nowrap;
  width: 100%; }
  .input-group input {
    -ms-flex: 1 0 auto;
        flex: 1 0 auto;
    margin-top: 0;
    width: auto; }
  .input-group__button {
    -ms-flex: 0 1 auto;
        flex: 0 1 auto;
    margin-top: 0; }
    .input-group__button .button {
      /**
			Make sure button aligns vertically with input field by changing the button padding to match the input
			*/
      padding: 1em 1.5em; }

/**
Collapsible input grouping
 */
.js-input-collapsible {
  margin-bottom: 0;
  max-height: 0;
  overflow: hidden;
  visibility: hidden; }
  .js-input-collapsible.is-active {
    margin-bottom: 1.5em;
    max-height: none;
    overflow: auto;
    visibility: visible; }

/**
Shared focus styles for checkboxes and radio buttons
 */
.input--checkbox:focus + .checkbox-label:before,
.input--radio:focus + .radio-label:before,
.input--checkbox:focus + .checkbox-label,
.input--radio:focus + .radio-label {
  background-color: #8b0084;
  color: contrast(#8b0084);
  outline: 2px solid #8b0084;
  outline-offset: 0; }

/**
Shared input styles, gathered here for efficiency
 */
.checkbox-label::after,
.checkbox-label::before,
.radio-label::after,
.radio-label::before,
.segmented-label:after,
.segmented-label:before {
  content: '';
  position: absolute; }

/**
Checkboxes
 */
.input--checkbox {
  /* Hide the actual checkbox */
  left: -3em;
  position: absolute; }

.checkbox-group label {
  background-color: inherit;
  cursor: pointer;
  display: block;
  margin-bottom: 1.5em;
  overflow: hidden;
  padding: 0.5em 0.5em 0.5em 3em;
  position: relative; }

* + .checkbox-group label {
  margin-top: 1rem; }

/* Box */
.checkbox-label:before {
  background-color: #fff;
  border: 2px solid #585858;
  border-radius: 0;
  height: 1.25em;
  left: 0.75em;
  top: 0.75em;
  width: 1.25em; }

/* Check */
.checkbox-label:after {
  background-color: #fff;
  border: 0.2em solid transparent;
  border-width: 0 0.2em 0.2em 0;
  display: block;
  height: 0.75em;
  left: 1.15em;
  top: 0.95em;
  transform: rotate(45deg);
  width: 0.4em; }

/* Focused */
.input--checkbox:focus + .checkbox-label:before {
  border-color: #111; }

/* Checked and Focused */
.input--checkbox:checked:focus + .checkbox-label:before {
  background-color: #111;
  border-color: #111; }

.input--checkbox:checked:focus + .checkbox-label:after {
  border-color: #fff; }

/* Checked */
.input--checkbox:checked + .checkbox-label:before {
  background-color: #111;
  border-color: #111; }

.input--checkbox:checked + .checkbox-label:after {
  background: none;
  border-color: #fff; }

/* Hover */
.checkbox-group label:hover .checkbox-label:before {
  border-color: #111 !important; }

.input--checkbox:checked + .checkbox-label:hover:before {
  background-color: #666 !important;
  border-color: #666 !important; }

/**
Radio buttons
 */
.radio-group input {
  /* Hide the actual radio */
  left: -3em;
  position: absolute; }

.radio-group label {
  cursor: pointer;
  display: block;
  line-height: 1.5;
  overflow: hidden;
  padding: 0.5em 0.5em 0.5em 3em;
  position: relative; }

* + .radio-group label {
  margin-top: 1rem; }

.radio-label {
  display: inline-block;
  margin-top: 0;
  max-width: 32em; }

/* Box */
.radio-label:before {
  background-color: #fff;
  border: 2px solid #585858;
  border-radius: 50%;
  height: 1.4em;
  left: 0.75em;
  top: 50%;
  transform: translateY(-50%);
  width: 1.4em; }

/* Check */
.radio-label:after {
  background-color: #fff;
  border-radius: 50%;
  height: 0.7em;
  left: 1.125em;
  top: 50%;
  transform: translateY(-50%);
  width: 0.7em; }

/* Focused */
.input--radio:focus + .radio-label:before {
  border-color: #111; }

/* Checked and Focused */
.input--radio:checked:focus + .radio-label:before {
  border-color: #666; }

.input--radio:checked:focus + .radio-label:after {
  background-color: #666; }

/* Checked */
.input--radio:checked + .radio-label:before {
  border-color: #111; }

.input--radio:checked + .radio-label:after {
  background-color: #111; }

/* Hover */
.radio-group label:hover .radio-label:before {
  border-color: #111 !important; }

.input--radio:checked + .radio-label:hover:before {
  border-color: #666 !important; }

.input--radio:checked + .radio-label:hover:after {
  background-color: #666 !important; }

/**
Segmented options. This can be either radio or checkbox, the purpose is to
show all available options outright, rather than hide them behind a <select>
 */
.segmented-group-wrapper,
.no-max-width {
  max-width: none; }

.segmented-group {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap; }

.segmented-group .input--checkbox,
.segmented-group .input--radio {
  /* Hide the actual checkbox/radio */
  left: -3em;
  position: absolute; }

.segmented-group > label {
  cursor: pointer;
  display: block;
  -ms-flex: 1 1 33.3333%;
      flex: 1 1 33.3333%;
  max-width: 100%;
  min-width: 9.6875rem;
  overflow: hidden;
  position: relative; }
  .segmented-group > label * {
    max-width: 100%; }

* + .segmented-group > label {
  margin-top: 0.25em; }

.segmented-label {
  margin: 1.5rem;
  max-width: 32em; }
  .segmented-label * {
    position: relative;
    z-index: 3; }
  .segmented-label * + * {
    margin-top: 0.3125rem; }
  .segmented-label :first-child {
    font-size: 1em; }
  .segmented-label :not(:first-child) {
    font-size: 0.8em; }

/* Box */
.segmented-label:before {
  border: 2px solid #585858;
  box-shadow: inset 0 4px 0 rgba(255, 255, 255, 0.2), inset 0 4px 0 rgba(0, 0, 0, 0.2);
  height: calc(100% - 4px);
  left: 2px;
  top: 2px;
  width: calc(100% - 4px);
  z-index: 2; }

/* Check */
.segmented-label:after {
  background-color: transparent;
  border: 0.2em solid white;
  border-width: 0 0.2em 0.2em 0;
  display: block;
  height: 0.75em;
  position: absolute;
  right: 0.75em;
  top: 0.5em;
  transform: scale(0) rotate(-45deg);
  width: 0.4em;
  z-index: 3; }

/* Focused */
.input--radio:focus + .segmented-label:before {
  border-color: #111;
  outline: 0.125em solid #8b0084; }

/* Checked and Focused */
.input--radio:checked:focus + .segmented-label:before {
  border-color: #50b98a;
  box-shadow: inset 0 0.125em 0 0 #aaa; }

/* Checked */
.input--radio:checked + .segmented-label:before {
  background-color: #3d9970;
  color: contrast(#3d9970);
  box-shadow: inset 0 0.125em 0 0 #2e7555;
  border-color: #2e7555;
  border-width: 0.25em; }

.input--radio:checked + .segmented-label {
  background-color: #3d9970;
  color: contrast(#3d9970); }

.input--radio:checked + .segmented-label:after {
  transform: scale(1) rotate(45deg); }

/* Default hover */
.segmented-group label:hover .segmented-label:before {
  box-shadow: inset 0 2px 0 0 #2e7555; }

/* Checked hover */
.input--radio:checked + .segmented-label:hover:before {
  border-color: #666; }

/**
Date input
 */
.field-input--date {
  max-width: 12em; }

/**
Number input
 */
.field-input--number {
  max-width: 6em; }

/**
Error states
 */
.field--has-error .field-label + input,
.field--has-error .field-label + select,
.field--has-error .field-label + textarea {
  border-radius: 0; }

.field-error + .segmented-group,
.field-input + .field-error {
  margin-top: 0; }

.field--has-error input,
.field--has-error select,
.field--has-error textarea {
  border-color: #e93737;
  box-shadow: inset 2px 2px 0 0 #e93737, inset 2px -2px 0 0 #e93737, inset -2px -2px 0 0 #e93737, inset -2px 2px 0 0 #e93737; }

.field--has-error .segmented-group {
  border: 4px solid #e93737; }

.field-error:not(:empty) {
  background-color: #e93737;
  border-radius: 0;
  color: contrast(#e93737);
  list-style-type: none;
  padding: 1em; }

/*------------------------------------*\
    #Hide and show items inclusively

    See https://www.scottohara.me/blog/2017/04/14/inclusively-hidden.html
\*------------------------------------*/
/*
 * Hide from everybody and remove from the document flow, using the hidden
 * attribute.
 *
 * Use if a component should remain hidden regardless of CSS being
 * available or not (the style below provides support for legacy browsers).
 */
[hidden] {
  display: none !important; }

/*
 * Hide from everybody and remove from the document flow, using the %hidden
 * placeholder (extend the placeholder with Sass to avoid it appearing
 * repeatedly in your markup).
 *
 * Use if a component requires a basic show and hide interaction, and the
 * content should become available were CSS to fail.
 */
/*
 * Hide from everybody while maintaining layout, using the %invisible
 * placeholder (extend the placeholder with Sass to avoid it appearing
 * repeatedly in your markup).
 *
 * Use if a more complex transition is required, like when transitioning an
 * off-screen navigation into the viewport. Best paired with other CSS
 * properties that negate its position in the DOM e.g. `position: absolute;`
 */
/*
 * Hide visually only - remains available to Assistive Technology -
 * using the %visually-hidden placeholder (extend the placeholder with
 * Sass to avoid it appearing repeatedly in your markup).
 */
.visuallyhidden:not(:focus):not(:active), .skip-link:not(:focus):not(:active), .global-header [role="status"] {
  border: 0;
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(100%);
          clip-path: inset(100%);
  height: 1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px; }

/*
 *The :not portions of the following selector allow a means for any
 * focusable element to become visible when focused/active by a user.
 */
/*
 * Make sure that the siblings of hidden components do not cause the hidden
 * component to take up any vertical space.
 */
[hidden] + *,
.hidden + *,
.visuallyhidden + *,
.skip-link + * {
  margin-top: 0 !important; }

br {
  margin-top: 0; }

/*
 * Restore an element that has been visually hidden, using the %visually-hidden
 * placeholder (extend the placeholder with Sass to avoid it appearing
 * repeatedly in your markup).
 */
/*------------------------------------*\
    #HTML elements
\*------------------------------------*/
abbr {
  text-decoration-skip-ink: auto;
  text-underline-offset: 0.25em; }

dfn {
  font-style: normal;
  font-weight: 600; }

b,
strong,
.bold {
  font-weight: 600; }

em,
i {
  font-style: italic; }

small,
.small,
.small-caps {
  font-size: 0.875rem;
  line-height: calc(20 / 14); }

.small-caps {
  text-shadow: 0 0 0 #111;
  text-transform: uppercase; }

code,
samp,
pre {
  font-family: Monaco, "Lucida Console", monospace;
  font-size: .9em;
  -webkit-hyphens: none;
      -ms-hyphens: none;
          hyphens: none;
  orphans: 3;
  padding-left: 0.1875rem;
  padding-right: 0.1875rem;
  page-break-before: avoid;
  text-transform: none;
  widows: 3; }

/*------------------------------------*\
    #Icons
\*------------------------------------*/
svg {
  fill: currentColor;
  height: auto;
  width: 100%; }

/**
SVG icons are sized relative to font size, thanks to the em unit.

1. When the cap unit is supported this will make it easier to match icon
size to text size.
 */
.icon {
  height: 1em;
  height: 1cap;
  /* 1 */
  vertical-align: baseline;
  width: 1em;
  width: 1cap;
  /* 1 */ }

.icon--larger {
  height: 1.875rem;
  width: 1.875rem; }

.icon--beta {
  height: 2.4375rem;
  width: 3.8125rem; }

/**
Use the `with-icon` class on the SVG's parent, if there
is a need to specify the spacing between text and icon.
Pay attention to whether the icon is before the text or after.

2. Logical property creates appropriate spacing irrespective of text direction
 */
.with-icon--before,
.with-icon--after,
.with-icon--larger {
  -ms-flex-align: baseline;
      align-items: baseline;
  display: -ms-inline-flexbox;
  display: inline-flex; }

.with-icon--larger {
  -ms-flex-align: center;
      align-items: center; }

[dir="ltr"] .with-icon--before .icon {
  margin-right: 0.5rem; }
  @supports ((-webkit-margin-end: 1em) or (margin-inline-end: 1em)) {
    [dir="ltr"] .with-icon--before .icon {
      margin-right: 0;
      -webkit-margin-end: 0.5rem;
              margin-inline-end: 0.5rem;
      /* 2 */ } }

[dir="ltr"] .with-icon--after .icon {
  margin-left: 0.5rem; }
  @supports ((-webkit-margin-start: 1em) or (margin-inline-start: 1em)) {
    [dir="ltr"] .with-icon--after .icon {
      margin-left: 0;
      -webkit-margin-start: 0.5rem;
              margin-inline-start: 0.5rem;
      /* 2 */ } }

[dir="rtl"] .with-icon--before .icon {
  margin-left: 0.5rem; }
  @supports ((-webkit-margin-start: 1em) or (margin-inline-start: 1em)) {
    [dir="rtl"] .with-icon--before .icon {
      margin-left: 0;
      -webkit-margin-end: 0.5rem;
              margin-inline-end: 0.5rem;
      /* 2 */ } }

[dir="rtl"] .with-icon--after .icon {
  margin-right: 0.5rem; }
  @supports ((-webkit-margin-start: 1em) or (margin-inline-start: 1em)) {
    [dir="rtl"] .with-icon--after .icon {
      margin-right: 0;
      -webkit-margin-start: 0.5rem;
              margin-inline-start: 0.5rem;
      /* 2 */ } }

/*------------------------------------*\
    #Images
\*------------------------------------*/
img {
  height: auto;
  width: 100%; }

.avatar {
  border-radius: 50%;
  height: 6.25rem;
  overflow: hidden;
  position: relative;
  width: 6.25rem; }
  .avatar img {
    height: auto;
    margin-top: -0.625rem;
    width: 100%; }

.avatar--med {
  height: 3.125rem;
  width: 3.125rem; }
  .avatar--med img {
    margin-top: 0; }

.avatar--small {
  height: 1.875rem;
  width: 1.875rem; }
  .avatar--small img {
    margin-top: 0; }

/*------------------------------------*\
    #Links
\*------------------------------------*/
/**
Default global link styles that do not interfere with component link styles
- see https://alexcarpenter.me/screencasts/2019/02/global-link-styles/

1. Don't rely on colour alone for styling links - see
https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/F73

2. Remove the outline on focused links when they are also active/hovered.
 */
a:not([class]),
a.archived {
  border: 0;
  color: #005797;
  cursor: pointer;
  padding-left: 0.125rem;
  padding-right: 0.125rem;
  text-decoration: underline;
  text-decoration-skip-ink: auto;
  text-underline-offset: 0.25em; }
  a:not([class]):visited,
  a.archived:visited {
    color: #920ba6; }
    a:not([class]):visited svg,
    a.archived:visited svg {
      fill: #920ba6; }
  a:not([class]):hover, a:not([class]):active,
  a.archived:hover,
  a.archived:active {
    color: #024488;
    outline-width: 0;
    /* 2 */ }
    a:not([class]):hover svg, a:not([class]):active svg,
    a.archived:hover svg,
    a.archived:active svg {
      fill: #024488; }

/*------------------------------------*\
    #Lists
\*------------------------------------*/
/**
Remove default list styles on lists with a class name (e.g. 'nav-list')
 */
ol[class],
ul[class] {
  list-style: none;
  padding: 0; }

ul:not([class]) > * + *,
ul:not([class]) li ul,
ul:not([class]) li ol,
ol:not([class]) > * + *,
ol:not([class]) li ul,
ol:not([class]) li ol {
  -webkit-margin-before: 0.75em;
          margin-block-start: 0.75em; }

ul:not([class]) {
  -webkit-padding-start: 2.4em;
          padding-inline-start: 2.4em; }

ol:not([class]) {
  counter-reset: count;
  list-style-type: none;
  -webkit-padding-start: 1.25em;
          padding-inline-start: 1.25em; }
  ol:not([class]) > li {
    counter-increment: count; }
    ol:not([class]) > li::before {
      content: counters(count, ".") " ";
      -webkit-padding-end: 0.5em;
              padding-inline-end: 0.5em; }

.clean-list li {
  display: block; }

/**
Description lists / Definition lists
 */
dl dd + dt {
  -webkit-margin-before: 0.5em;
          margin-block-start: 0.5em; }

dl dt + dd,
dl dd + dd {
  -webkit-margin-before: 0.25em;
          margin-block-start: 0.25em; }

/*------------------------------------*\
    #Skip link
\*------------------------------------*/
.skip-link {
  background-color: #005797;
  color: #fff;
  padding: 0.625em 0.9375em;
  text-decoration: none; }
  .skip-link:active, .skip-link:focus {
    left: 0;
    position: absolute;
    top: 0;
    z-index: 999; }
    .skip-link:active span, .skip-link:focus span {
      box-shadow: 0 -1px 0 0 inset; }

/*------------------------------------*\
    #Social links
\*------------------------------------*/
.social-links__item {
  height: 3rem;
  padding: 0.875rem;
  width: 3rem; }
  .social-links__item .icon {
    height: 1.25rem;
    width: 1.25rem; }
  .social-links__item:hover .icon {
    color: #024488; }

/*------------------------------------*\
    #Tables

    1. Logical property allows text-direction to change with 'dir'
\*------------------------------------*/
table {
  border: 1px solid #bdbdbd;
  border-collapse: collapse;
  width: 100%; }

tr:nth-child(even) {
  background-color: rgba(0, 0, 0, 0.025); }

th,
td,
table caption {
  padding: 0.75rem;
  text-align: left;
  text-align: start;
  /* 1 */ }

[dir="rtl"] th,
[dir="rtl"] td,
[dir="rtl"] table caption {
  text-align: right;
  text-align: start;
  /* 1 */ }

th {
  vertical-align: bottom; }
  th[scope="col"] {
    background-color: #024488;
    color: #fff; }

td {
  vertical-align: text-top; }

/**
Responsive tables:
https://adrianroselli.com/2020/11/under-engineered-responsive-tables.html
 */
@media screen {
  .table-wrap {
    border: 1px solid #bdbdbd;
    max-width: 100% !important;
    overflow: auto; }
    .table-wrap table {
      border: 0; } }

/*------------------------------------*\
    #Typography
\*------------------------------------*/
body {
  font-family: "Trebuchet MS", Geneva, sans-serif;
  font-size: 1rem;
  font-style: normal;
  font-weight: 400;
  line-height: 1.5; }

h1, h2, h3, h4, h5, h6 {
  font-weight: 600;
  margin: 0; }

h1 {
  margin-bottom: 1em; }

.txt-mercury {
  font-size: 2.125rem;
  line-height: calc(43 / 34); }
  @media screen and (min-width: 48em) {
    .txt-mercury {
      font-size: 3.75rem;
      line-height: calc(72 / 60); } }

h1,
.txt-venus {
  font-size: 2.0625rem;
  line-height: calc(43 / 33); }
  @media screen and (min-width: 48em) {
    h1,
    .txt-venus {
      font-size: 3rem;
      line-height: calc(67.2 / 48); } }

h2,
.txt-earth {
  font-size: 1.6875rem;
  line-height: calc(33.6 / 27); }
  @media screen and (min-width: 48em) {
    h2,
    .txt-earth {
      font-size: 2.125rem;
      line-height: calc(43 / 34); } }

h3,
.lead,
.txt-mars {
  font-size: 1.5rem;
  line-height: calc(33.6 / 24); }

h4,
.txt-jupiter {
  font-size: 1.25rem;
  line-height: calc(32 / 20); }

h5,
.txt-saturn {
  font-size: 1.125rem;
  line-height: calc(27 / 18); }

h6 {
  font-size: 1rem; }

.txt-pluto {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15); }

.txt-eris {
  font-size: 0.875rem;
  line-height: calc(20 / 14); }

/**
When Font Face Observer has detected that the @font-face files are loaded, then we
can safely use the web fonts instead of the system fonts.
 */
.fonts-loaded body {
  font-family: "Noto Sans", "Trebuchet MS", Geneva, sans-serif; }

/*------------------------------------*\
    #Print styles

    We aim to:
    - Hide everything that is irrelevant for print
    - Make everything black and white and easy to read

    It is perfectly acceptable to use !important for print styles
    as they should override everything else.

    IMPORTANT: Anything that uses flexbox or grid on screen
    and needs to appear in print must be refactored to use
    block or inline block layout. Otherwise it will not print.
    You can check this using the print preview in Chrome/Firefox.
\*------------------------------------*/
@media print {
  *,
  *:before,
  *:after,
  p:first-line,
  div:first-line,
  blockquote:first-line,
  li:first-line {
    background: transparent !important;
    box-shadow: none !important;
    color: #000 !important;
    overflow: visible !important;
    position: static !important;
    text-shadow: none !important; }
  body,
  .lazy,
  .lazyload {
    display: block !important; }
  .js-object-fit,
  .responsive-wrapper,
  picture {
    padding: 0 !important; }
    .js-object-fit img,
    .responsive-wrapper img,
    picture img {
      display: block !important;
      height: auto !important;
      width: 100% !important; }
  li,
  .js-object-fit,
  .responsive-wrapper,
  picture,
  figure,
  img {
    break-inside: avoid;
    page-break-inside: avoid;
    -webkit-column-break-inside: avoid; }
  .l-sidebar > div {
    display: block !important; }
  .js-carousel > * {
    display: block !important; }
  .js-carousel ul.carousel-controls {
    display: none !important; }
  .js-carousel ul.clean-list li + li {
    margin-top: 1cm !important; }
  .component--collapsibles [hidden] {
    display: block !important; }
  .skip-link,
  #cookie-banner,
  nav,
  .component--video,
  .global-footer {
    display: none !important; } }

/*------------------------------------*\
    #Layouts
\*------------------------------------*/
/*------------------------------------*\
    #Box layout primitive

    From https://absolutely.every-layout.dev/layouts/box/

    `.l-box` should have borders and/or padding on all sides, or
    none at all. Otherwise it's not a box, but something more specific.
\*------------------------------------*/
.l-box {
  border: 1px solid;
  display: block;
  padding: 1.5rem; }

.l-box--no-padding {
  padding: 0; }

/**
1. High contrast themes tend to eliminate background-color. If there is no
border set on the box, we need to apply a transparent outline to maintain
the box shape. The negative outline-offset moves the outline inside the
perimeter so it behaves like a border and doesn't add to the overall size.
 */
.l-box--no-border {
  border: none;
  outline: 1px solid transparent;
  /* 1 */
  outline-offset: -1px;
  /* 1 */ }

/*------------------------------------*\
    #Center layout primitive

    From https://absolutely.every-layout.dev/layouts/center/

    `.l-center` creates a horizontally centered container.
\*------------------------------------*/
/**
1. We use left and right padding to add some minimum space between the
contents of `.l-center` and the edges of the parent element or viewport.
To avoid making the content narrower than intended, we add an exception
to our global box-sizing rule.
 */
.l-center.l-center {
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
  max-width: 71.25rem;
  padding-left: 5vw;
  padding-right: 5vw; }

/*------------------------------------*\
    #Cluster layout primitive

    From https://absolutely.every-layout.dev/layouts/cluster/

    `.l-cluster` suits any groups of elements that differ in length and
    are liable to wrap. Use the Cluster to align any groups of horizontally
    laid out elements to the left or right, or in the center, with even
    spacing between elements.

    The size variable used below defines the desired spacing between
    elements inside `.l-cluster` (currently 1rem). Sizes are defined
    in /10-settings/sizes
\*------------------------------------*/
/**
Suppress horizontal scrolling caused by the negative margin
in some circumstances.
 */
.l-cluster {
  overflow: hidden; }

/**
We use flexbox to configure the elements into clusters without creating
white space. We can control how we align items within the cluster,
by using 'align-items` and `justify-content`.
 */
.l-cluster > * {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.625rem; }

/**
We apply an even, symmetrical margin to the elements that we wish to space
out, but halve it to to account for 'doubling up' at the edges.
 */
.l-cluster.l-cluster > * > * {
  display: inline-block;
  margin: 0.625rem; }

/*------------------------------------*\
    #Frame layout primitive

    From https://absolutely.every-layout.dev/layouts/frame/

    `.l-frame` is most useful for cropping media (images
    and video) to a specific aspect ratio.

    It is not recommended to apply the `.l-frame` class to the
    <figure> element, as it will interfere with the <figcaption>.
    Instead, place it on <picture> or a <div> inside of <figure>.
\*------------------------------------*/
.l-frame {
  display: block;
  position: relative; }

.l-frame > * {
  -ms-flex-align: center;
      align-items: center;
  bottom: 0;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  left: 0;
  overflow: hidden;
  position: absolute;
  right: 0;
  top: 0; }

.l-frame > iframe,
.l-frame > img,
.l-frame > video {
  height: 100%;
  object-fit: cover;
  width: 100%; }

/* Common aspect ratios */
.l-frame--16-9 {
  padding-bottom: 56.25%; }

.l-frame--3-2 {
  padding-bottom: 66.67%; }

.l-frame--4-3 {
  padding-bottom: 75%; }

.l-frame--square {
  padding-bottom: 100%; }

/*------------------------------------*\
    #Sidebar layout primitive

    From https://absolutely.every-layout.dev/layouts/sidebar/

    `.l-sidebar` creates a container for a larger panel next to
    a smaller - sidebar - panel.

    When there is enough horizontal space for them to sit alongside
    each other, they do so. Otherwise they stack vertically. The
    point at which this happens is determined by setting a flex-basis
    on the sidebar panel and a min-width on the other panel.

    N.B: because this layout uses Flexbox, we can use the `order`
    property on either `.not-sidebar` or `.sidebar` (depending upon
    the source order of the HTML) to determine whether the sidebar
    sits on the left or right side.
\*------------------------------------*/
/**
Suppress horizontal scrolling caused by the negative margin
in some circumstances.
 */
.l-sidebar {
  overflow: hidden; }

/**
We target the intermediary wrapper and give it a negative margin
to create a gutter between the `.sidebar` and `.not-sidebar`.
 */
.l-sidebar > * {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: row;
      flex-direction: row;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -0.75rem;
  /* 1 */ }

/**
We apply an even, symmetrical margin to `.sidebar` and `.not-sidebar`,
but halve it to to account for 'doubling up' at the edges.
 */
.l-sidebar > * > * {
  margin: 0.75rem; }

/**
Flex-basis determines the ideal width of the `.sidebar`. This can be
omitted to let the contents of `.sidebar` determine the width of
`.sidebar` (e.g. an image with a specified max-width).
 */
.l-sidebar .sidebar {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -ms-flex-preferred-size: 20rem;
      flex-basis: 20rem;
  -ms-flex-positive: 1;
      flex-grow: 1; }
  .l-sidebar .sidebar > * + * {
    margin-top: 1em; }

/**
Min-width determines the point at which `.sidebar` and `.not-sidebar`
will sit side-by-side rather than vertically. This negates the use of
a viewport media query.
 */
.l-sidebar .not-sidebar {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -ms-flex-preferred-size: 0;
      flex-basis: 0;
  -ms-flex-positive: 999;
      flex-grow: 999;
  min-width: calc(55% - 1.5rem); }
  .l-sidebar .not-sidebar > * + * {
    margin-top: 1em; }

/*------------------------------------*\
    #Switcher layout primitive

    Uses this to switch between vertical and horizontal layouts:
    https://www.freecodecamp.org/news/the-fab-four-technique-to-create-responsive-emails-without-media-queries-baf11fdfa848/

    `.l-switcher` switches a Flexbox context between a horizontal and a
    vertical layout at a given, CONTAINER-BASED breakpoint, rather than
    using viewport media queries.

    The child elements in the horizontal configuration will be of equal
	width.

	To apply gutter spacing, apply padding to the flex items and an
    equivalent negative margin to the flex container. This will double up,
    so use half the intended value.

\*------------------------------------*/
.l-switcher {
  overflow: hidden; }

.l-switcher > * {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap; }

/**
1. Determines the item width in the single column, vertical configuration

2. Determines how many items will be in a row in the horizontal configuration

3. The 690 value matches the desired breakpoint value. The 100% corresponds to
the width of the columns' parent container. This calculation will create a
value that's either bigger than the max-width or smaller than the min-width,
so that either of these properties is applied instead.
 */
.l-switcher > * > * {
  max-width: 100%;
  /* 1 */
  min-width: 50%;
  /* 2 */
  width: calc(690px * 690 - 100% * 690);
  /* 3 */ }

/*------------------------------------*\
    #Core components
\*------------------------------------*/
/*------------------------------------*\
    #Global header core
\*------------------------------------*/
.no-js [data-trigger="account-menu"],
.no-js .account-menu {
  display: none; }

.global-header .banner {
  background-color: #cbe0fb;
  padding-bottom: 0.625rem;
  padding-top: 0.625rem; }

.global-header .banner__inner {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex; }
  .global-header .banner__inner .icon--beta {
    -ms-flex: none;
        flex: none;
    width: 3.8125rem; }
  .global-header .banner__inner p {
    font-size: 0.875rem;
    line-height: calc(20 / 14); }
  .global-header .banner__inner a {
    color: #024488; }

[dir="ltr"] .banner__inner p {
  margin-left: 0.625rem; }

[dir="rtl"] .banner__inner p {
  margin-right: 0.625rem; }

#lang-nav {
  background-color: #f8f8fb; }
  #lang-nav .l-cluster > * {
    -ms-flex-pack: end;
        justify-content: flex-end;
    margin: 0 -0.625rem; }
  #lang-nav .l-cluster.l-cluster > * > * {
    margin: 0 0.625rem; }
  #lang-nav a {
    font-size: 0.875rem;
    line-height: calc(20 / 14);
    color: #111;
    display: block;
    padding-bottom: 0.75rem;
    padding-top: 0.75rem; }

/*------------------------------------*\
    #Logo
\*------------------------------------*/
.logo {
  display: block;
  height: 2.75rem;
  position: relative;
  width: 4.125rem; }
  @media screen and (min-width: 64em) {
    .logo {
      height: 3.25rem;
      width: 4.875rem; } }

/*------------------------------------*\
    #Navigation core
\*------------------------------------*/
#global-nav svg {
  pointer-events: none; }

[data-trigger="mobile-nav"] {
  display: none; }

#global-nav {
  border-bottom: solid 1px #bdbdbd;
  display: block;
  padding-bottom: 1.125rem;
  padding-top: 1.125rem; }
  @media screen and (min-width: 71.25em) {
    #global-nav {
      padding-bottom: 0;
      padding-top: 1.25rem; } }

.global-nav__inner {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  @media screen and (min-width: 71.25em) {
    .global-nav__inner {
      -ms-flex-align: end;
          align-items: flex-end;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      position: relative; } }

.global-nav__inner > ul {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding-bottom: 2.8125rem;
  width: 100%; }
  @media screen and (min-width: 71.25em) {
    .global-nav__inner > ul {
      -ms-flex-preferred-size: auto;
          flex-basis: auto;
      -ms-flex-wrap: nowrap;
          flex-wrap: nowrap;
      padding-bottom: 0; } }

@media screen and (min-width: 71.25em) {
  li.top-nav-item + li.top-nav-item {
    -webkit-margin-start: 0.25rem;
            margin-inline-start: 0.25rem; } }

@media screen and (min-width: 71.25em) {
  .global-nav__inner > ul > li:last-child {
    -webkit-margin-start: auto;
            margin-inline-start: auto; } }

.global-nav__inner .top-nav-item {
  border-bottom: solid 1px #bdbdbd;
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%; }
  @media screen and (min-width: 71.25em) {
    .global-nav__inner .top-nav-item {
      border-bottom: none;
      -ms-flex-preferred-size: auto;
          flex-basis: auto; } }

.nav-link {
  display: block;
  padding: 0.625rem 0;
  position: relative;
  text-decoration: none; }
  @media screen and (min-width: 71.25em) {
    .nav-link {
      display: inline-block; } }

.global-nav__inner .top-nav-item > .nav-link {
  font-weight: 600; }

@media screen and (min-width: 71.25em) {
  .logo-link {
    border-bottom: solid 3px transparent;
    -webkit-margin-end: 1.5625rem;
            margin-inline-end: 1.5625rem;
    padding-bottom: 0.3125rem; }
    .logo-link:hover, .logo-link:focus {
      border-bottom-color: #0079b8;
      outline: none; } }

.icon-link {
  -ms-flex-align: center;
      align-items: center;
  display: -ms-flexbox;
  display: flex;
  padding: 0.875rem 0; }
  @media screen and (min-width: 71.25em) {
    .icon-link {
      display: -ms-inline-flexbox;
      display: inline-flex;
      -ms-flex-pack: center;
          justify-content: center;
      height: 100%;
      min-width: 2.75rem; } }

.account-login {
  -ms-flex-preferred-size: 100%;
      flex-basis: 100%;
  font-size: 0.875rem !important;
  text-decoration: none; }
  @media screen and (min-width: 71.25em) {
    .account-login {
      -ms-flex-preferred-size: auto;
          flex-basis: auto;
      padding-bottom: 0.625rem;
      padding-top: 0.625rem; } }
  .account-login .icon {
    color: #bdbdbd;
    height: 1.5rem;
    width: 1.5rem; }

@media screen and (min-width: 71.25em) {
  .global-nav__inner .top-nav-item > a {
    border-bottom: solid 3px transparent;
    font-size: 1rem;
    padding: 0.625rem 0.3125rem 0.4375rem;
    white-space: nowrap; }
    .global-nav__inner .top-nav-item > a:hover, .global-nav__inner .top-nav-item > a:focus {
      border-bottom-color: #0079b8;
      outline: none; } }

.global-nav__inner .nav__submenu {
  display: none; }

/*------------------------------------*\
    #Breadcrumbs
    See: https://scottaohara.github.io/a11y_breadcrumbs/
\*------------------------------------*/
#breadcrumb {
  padding-bottom: 0.9375rem;
  padding-top: 0.625rem; }
  #breadcrumb .l-cluster > * {
    margin: 0 -0.6875rem; }
  #breadcrumb .l-cluster.l-cluster > * > * {
    margin: 0 0.6875rem;
    position: relative; }

.breadcrumbs a {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15);
  color: #111;
  display: block;
  min-width: 2.75rem;
  padding-bottom: 0.6875rem;
  padding-top: 0.6875rem;
  text-align: center; }
  .breadcrumbs a:visited, .breadcrumbs a:hover, .breadcrumbs a:active {
    color: #111; }

.breadcrumbs [aria-current] {
  font-weight: 600;
  text-decoration: none; }
  .breadcrumbs [aria-current]:hover, .breadcrumbs [aria-current]:focus {
    outline-color: #111; }

/**
Separator chevron - see https://codepen.io/jonneal/pen/kptBs
*/
.breadcrumbs li:not(:last-child)::after {
  border-style: solid;
  content: '';
  display: block;
  height: 0.5em;
  position: absolute;
  top: 50%;
  transform: rotate(45deg) translateY(-50%);
  width: 0.5em; }

[dir="ltr"] .breadcrumbs li {
  padding-right: 0.5em; }

[dir="ltr"] .breadcrumbs li:not(:last-child)::after {
  border-width: 0.1em 0.1em 0 0;
  right: -0.2em; }

[dir="rtl"] .breadcrumbs li {
  padding-left: 0.5em; }

[dir="rtl"] .breadcrumbs li:not(:last-child)::after {
  border-width: 0 0 0.1em 0.1em;
  right: 100%; }

/*------------------------------------*\
    #Main
\*------------------------------------*/
/**
1. We use left and right padding to add some minimum space between the
contents of <main> and the edges of the parent element or viewport.
To avoid making the content narrower than intended, we add an exception
to our global box-sizing rule.
 */
main,
#main {
  box-sizing: content-box;
  margin-left: auto;
  margin-right: auto;
  max-width: 71.25rem;
  padding: 1.5rem 5vw 6.25rem; }

/*------------------------------------*\
    #Hero
\*------------------------------------*/
.hero {
  background-color: #f8f8fb; }
  @media screen and (min-width: 71.25em) {
    .hero {
      padding-top: 1.125rem; } }
  .hero .l-sidebar > *,
  .hero .l-sidebar > * > * {
    margin: 0; }
  .hero .l-sidebar .sidebar {
    -ms-flex-preferred-size: 31.25rem;
        flex-basis: 31.25rem; }
  .hero .l-sidebar .not-sidebar {
    min-width: 50%; }
  .hero .l-sidebar .not-sidebar > * {
    max-width: 90%; }
  .hero .lead {
    margin-bottom: 1.125rem;
    margin-top: 0; }
  .hero img {
    margin-left: auto;
    margin-right: auto;
    max-width: 31.25rem; }

.hero + * {
  margin-top: 3.125rem; }

/*------------------------------------*\
    #Translations
\*------------------------------------*/
.translations {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.translations.l-cluster > * {
  margin: 0 -0.625rem; }

.translations.l-cluster > * > * {
  margin: 0 0.625rem; }

.translations + * {
  margin-top: 1.875rem; }

.translations h2 {
  font-size: 1rem;
  font-weight: normal;
  padding-bottom: 0.625rem;
  padding-top: 0.75rem; }

.translations a {
  display: block;
  padding-bottom: 0.625rem;
  padding-top: 0.625rem; }

.translations [aria-current] {
  color: #111;
  text-decoration: none; }
  .translations [aria-current]:visited {
    color: #111; }
  .translations [aria-current]:hover, .translations [aria-current]:focus {
    color: #111;
    outline-color: #111; }

/*------------------------------------*\
    #Table of contents
\*------------------------------------*/
.toc {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .toc > * + * {
    margin-top: 1em; }

.toc + * {
  margin-top: 1.875rem; }
  @media screen and (min-width: 71.25em) {
    .toc + * {
      margin-top: 3.125rem; } }

.toc h2 {
  font-size: 1rem;
  font-weight: normal; }

[dir="ltr"] .toc ul {
  border-left: solid 3px #f9c818;
  padding-left: 0.9375rem; }

[dir="rtl"] .toc ul {
  border-right: solid 3px #f9c818;
  padding-right: 0.9375rem; }

.toc ul a {
  display: inline-block;
  padding-bottom: 0.625rem;
  padding-top: 0.625rem; }

/*------------------------------------*\
    #Text component

    1. The `stack` mixin applies flexbox in the column direction,
    so we need to prevent buttons from stretching horizontally
\*------------------------------------*/
.component--text {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .component--text > * + * {
    margin-top: 1em; }

.component--text > * {
  max-width: 41.25rem; }

.component--text button,
.component--text .button {
  -ms-flex-item-align: start;
      align-self: flex-start;
  /* 1 */ }

/*------------------------------------*\
    #Image component
\*------------------------------------*/
.component--image figcaption {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -webkit-margin-before: 1em;
          margin-block-start: 1em; }
  .component--image figcaption > * + * {
    margin-top: 1em; }
  .component--image figcaption > * {
    max-width: 33.75rem; }
  .component--image figcaption > a {
    -ms-flex-item-align: start;
        align-self: flex-start;
    display: inline-block;
    margin: 0;
    padding-bottom: 0.625rem;
    padding-top: 0.625rem; }

/*------------------------------------*\
    #Video component
\*------------------------------------*/
.component--video iframe {
  border: 0; }

.component--video figcaption {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15);
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -webkit-margin-before: 1em;
          margin-block-start: 1em; }
  .component--video figcaption > * + * {
    margin-top: 1em; }
  .component--video figcaption > * {
    max-width: 33.75rem; }
  .component--video figcaption > a {
    -ms-flex-item-align: start;
        align-self: flex-start;
    display: inline-block;
    margin: 0;
    padding-bottom: 0.625rem;
    padding-top: 0.625rem; }

/*------------------------------------*\
    #Columns
\*------------------------------------*/
.component--columns {
  overflow: hidden; }

.component--columns > h2:not([class]) {
  font-size: 1.5rem;
  line-height: calc(33.6 / 24); }

.component--columns > h2,
.component--columns > p {
  margin-bottom: 1em;
  max-width: 41.25rem; }

@media screen and (min-width: 48em) {
  .component--columns > ul {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin: -1.5%; } }

.component--columns > ul li + li {
  margin-top: 1.25rem; }
  @media screen and (min-width: 48em) {
    .component--columns > ul li + li {
      margin-top: 0; } }

@media screen and (min-width: 48em) {
  .component--columns--images > ul > li {
    -ms-flex: 1 0 33%;
        flex: 1 0 33%;
    max-width: 50%;
    padding: 1.5%; } }

@media screen and (min-width: 48em) {
  .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child,
  .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li {
    -ms-flex-preferred-size: 50%;
        flex-basis: 50%; } }

@media screen and (min-width: 48em) {
  .component--columns--icons > ul > li {
    -ms-flex: 1 0 50%;
        flex: 1 0 50%;
    max-width: 50%;
    padding: 1.5%; } }

@media screen and (min-width: 71.25em) {
  .component--columns--icons > ul > li {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%; } }

@media screen and (min-width: 71.25em) {
  .component--columns--icons li:nth-last-child(n+5), .component--columns--icons li:nth-last-child(n+5) ~ li {
    -ms-flex-preferred-size: 33%;
        flex-basis: 33%; } }

@media screen and (min-width: 71.25em) {
  .component--columns--icons li:nth-last-child(n+7), .component--columns--icons li:nth-last-child(n+7) ~ li {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%; } }

/*------------------------------------*\
    #Cards
\*------------------------------------*/
.card {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  height: 100%; }

[dir="ltr"] .card--event {
  border-left: solid 0.375rem #237978; }

[dir="rtl"] .card--event {
  border-right: solid 0.375rem #237978; }

.card--event.meeting {
  border-color: #1bc0d7; }

.card--event.talk {
  border-color: #f9c818; }

.card--event.workshop {
  border-color: #e93737; }

.card--event .icon {
  color: #585858; }

.card__text {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  -ms-flex-positive: 1;
      flex-grow: 1;
  -ms-flex-order: 1;
      order: 1;
  padding-top: 1rem; }
  .card__text > * + * {
    margin-top: 1rem; }

.card__heading {
  font-size: 1.125rem;
  line-height: calc(27 / 18); }

.card__image img {
  border-radius: 0.25rem; }

.card--cta .card__text {
  /**
	Minimum spacing between the call-to-action button and the preceding element.
	Matches the measure used for the stack mixin on `.card__text`
	 */ }
  .card--cta .card__text > :nth-last-child(2) {
    margin-bottom: 1rem; }
  .card--cta .card__text a {
    line-height: 2.75rem; }

/*------------------------------------*\
    #Tag list
\*------------------------------------*/
.tag-list.tag-list {
  margin: -0.625rem; }
  .tag-list.tag-list li {
    margin: 0.625rem; }

.tag {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15);
  color: #585858;
  display: block; }

/*
Makes the tag links selectable if card link is stretched
across entire card using pseudo element
 */
a.tag {
  position: relative;
  text-decoration: underline;
  text-decoration-skip-ink: auto;
  text-underline-offset: 0.25em;
  z-index: 10; }

/*------------------------------------*\
    #Fifty-fifty
\*------------------------------------*/
@media screen and (min-width: 48em) {
  .component--fifty-fifty {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: justify;
        justify-content: space-between; } }

.component--fifty-fifty > * + * {
  margin-top: 1rem; }
  @media screen and (min-width: 48em) {
    .component--fifty-fifty > * + * {
      margin-top: 0; } }

.component--fifty-fifty figcaption {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .component--fifty-fifty figcaption > * + * {
    margin-top: 1em; }
  @media screen and (min-width: 48em) {
    .component--fifty-fifty figcaption {
      -ms-flex-preferred-size: 52%;
          flex-basis: 52%; } }
  @media screen and (min-width: 64em) {
    .component--fifty-fifty figcaption {
      -ms-flex-preferred-size: 45%;
          flex-basis: 45%; } }
  .component--fifty-fifty figcaption .button--alt {
    -ms-flex-item-align: start;
        align-self: flex-start; }

@media screen and (min-width: 48em) {
  .component--fifty-fifty .image {
    -ms-flex-preferred-size: 45%;
        flex-basis: 45%; } }

.component--fifty-fifty .image img {
  border-radius: 0.25rem; }

@media screen and (min-width: 48em) {
  .component--fifty-fifty.reversed figcaption {
    -ms-flex-order: -1;
        order: -1; } }

/*------------------------------------*\
    #Evangelists
\*------------------------------------*/
@media screen and (min-width: 64em) {
  .component--evangelists {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -ms-flex-pack: justify;
        justify-content: space-between; } }

.component--evangelists > * + * {
  margin-top: 1rem; }
  @media screen and (min-width: 64em) {
    .component--evangelists > * + * {
      margin-top: 0; } }

.component--evangelists__text {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .component--evangelists__text > * + * {
    margin-top: 1em; }
  @media screen and (min-width: 64em) {
    .component--evangelists__text {
      -ms-flex-preferred-size: 45%;
          flex-basis: 45%; } }
  .component--evangelists__text h2 ~ * {
    max-width: 41.25rem; }

.component--evangelists__list {
  background-color: #005a9c;
  border-radius: 0.375rem;
  color: #fff;
  overflow: hidden;
  padding-top: 1.5rem; }
  @media screen and (min-width: 64em) {
    .component--evangelists__list {
      -ms-flex-preferred-size: 45%;
          flex-basis: 45%; } }
  .component--evangelists__list h3 {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }
  .component--evangelists__list li + li {
    border-top: solid 1px #649bc5; }
  .component--evangelists__list .sidebar {
    -ms-flex-preferred-size: auto;
        flex-basis: auto; }
  .component--evangelists__list .not-sidebar {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: start;
        justify-content: flex-start;
    min-width: calc(65% - 1.5rem); }
    .component--evangelists__list .not-sidebar > * + * {
      margin-top: 0.75em; }
  .component--evangelists__list a {
    color: #fff; }
    .component--evangelists__list a:visited, .component--evangelists__list a:hover, .component--evangelists__list a:active {
      color: #fff; }
    .component--evangelists__list a:focus {
      outline-color: #fff; }

/*------------------------------------*\
    #Actitivy
\*------------------------------------*/
.component--activity {
  background-color: #f8f8fb;
  padding-bottom: 3.125rem;
  padding-top: 3.125rem; }

@media screen and (min-width: 64em) {
  .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child,
  .component--activity .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%; } }

.component--activity .card {
  background-color: #fff;
  border-radius: 0.25rem;
  overflow: hidden; }

.component--activity .card__text {
  padding: 1.25rem; }

.component--activity .card__image img {
  border-radius: 0; }

/*------------------------------------*\
    #Members grid
\*------------------------------------*/
.component--members {
  background-color: #f8f8fb;
  padding-bottom: 1.5625rem;
  padding-top: 1.5625rem; }

.component--members .l-center {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start; }
  .component--members .l-center > * + * {
    margin-top: 1em; }
  .component--members .l-center > h2,
  .component--members .l-center > p {
    max-width: 41.25rem; }

.component--members__grid {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: row wrap;
      flex-flow: row wrap; }
  @supports (display: grid) {
    .component--members__grid {
      display: -ms-grid;
      display: grid;
      grid-gap: 1.375rem;
      -ms-grid-columns: (minmax(7.5rem, 1fr))[auto-fill];
          grid-template-columns: repeat(auto-fill, minmax(7.5rem, 1fr)); } }

.component--members__grid > div {
  background-color: #fff;
  border: solid 1.375rem #f8f8fb;
  -ms-flex-preferred-size: 7.5rem;
      flex-basis: 7.5rem;
  padding: 1.5rem;
  position: relative; }
  @supports (display: grid) {
    .component--members__grid > div {
      border: none;
      display: -ms-grid;
      display: grid;
      position: static; } }
  .component--members__grid > div::before {
    content: '';
    display: block;
    padding-bottom: 100%; }
  .component--members__grid > div > img {
    bottom: 0;
    left: 0;
    margin: auto;
    max-width: 100%;
    position: absolute;
    right: 0;
    top: 0; }
    @supports (display: grid) {
      .component--members__grid > div > img {
        height: 100%;
        max-width: none;
        object-fit: contain;
        position: static; } }
  @supports (display: grid) {
    .component--members__grid > div::before,
    .component--members__grid > div > img {
      grid-area: 1 / 1 / 2 / 2; } }

.component--members__cta > * > *:not(a) {
  line-height: 2.75rem; }

/*------------------------------------*\
    #Slide
\*------------------------------------*/
@media screen and (min-width: 64em) {
  .slide {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between; } }

.slide > * + * {
  margin-top: 1rem; }
  @media screen and (min-width: 64em) {
    .slide > * + * {
      margin-top: 0; } }

@media screen and (min-width: 64em) {
  .slide__quote,
  .slide__cite {
    -ms-flex-preferred-size: 45%;
        flex-basis: 45%; } }

.slide__quote {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: start;
      justify-content: flex-start;
  font-size: 1.5rem;
  line-height: calc(33.6 / 24);
  font-weight: bold; }
  .slide__quote > * + * {
    margin-top: 1em; }
  .slide__quote > * {
    max-width: 41.25rem; }

.slide__cite {
  font-size: 0.9375rem;
  line-height: calc(22.5 / 15); }
  .slide__cite.l-sidebar .sidebar {
    -ms-flex-preferred-size: auto;
        flex-basis: auto; }
  .slide__cite.l-sidebar .not-sidebar {
    min-width: calc(70% - 1.5rem); }
    .slide__cite.l-sidebar .not-sidebar p:first-child {
      font-weight: bold; }
    .slide__cite.l-sidebar .not-sidebar p:first-child + p {
      margin-top: 0; }

.slide__logo {
  background-color: #fff;
  height: 7.5rem;
  padding: 1.5rem;
  width: 11.25rem; }
  .slide__logo > img {
    bottom: 0;
    left: 0;
    margin: auto;
    max-width: 100%;
    position: absolute;
    right: 0;
    top: 0; }
    @supports (object-fit: contain) {
      .slide__logo > img {
        height: 100%;
        max-width: none;
        object-fit: contain;
        position: static; } }

/*------------------------------------*\
    #Slider core
\*------------------------------------*/
.component--slider {
  background-color: #f8f8fb;
  padding-bottom: 1.5625rem;
  padding-top: 1.5625rem; }
  .component--slider h2 {
    font-size: 1rem;
    font-weight: normal;
    margin-bottom: 1.5rem; }
  .component--slider ul > li + li {
    margin-top: 1rem; }

/*------------------------------------*\
    #Crosslinks (You may also like)
\*------------------------------------*/
.crosslinks {
  background-color: #005a9c;
  color: #fff;
  padding-bottom: 3.125rem;
  padding-top: 3.125rem; }

@media screen and (min-width: 64em) {
  .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child,
  .crosslinks .component--columns--images li:nth-last-child(n+4):nth-last-child(-n+4):first-child ~ li {
    -ms-flex-preferred-size: 25%;
        flex-basis: 25%; } }

.crosslinks .card {
  background-color: #fff;
  border-radius: 0.25rem;
  color: #111;
  overflow: hidden; }

.crosslinks .card__text {
  padding: 1.25rem; }

.crosslinks .card__image img {
  border-radius: 0; }

/*------------------------------------*\
    #Pagination
    See: https://weboverhauls.github.io/demos/pagination/
\*------------------------------------*/
.pagination.pagination li {
  display: inline-block;
  position: relative; }
  .pagination.pagination li::before {
    content: "\2000";
    position: absolute;
    z-index: -1; }

.pagination.pagination .pagination__item {
  background-color: #e5e5e5;
  border: 1px solid;
  display: block;
  padding: 0.1875rem 0.625rem;
  text-decoration: none; }

.pagination.pagination [aria-current] {
  background-color: #aaa; }

/*------------------------------------*\
    #Global footer
\*------------------------------------*/
.global-footer {
  border-top: solid 1px #bdbdbd;
  -ms-grid-row: 2;
      grid-row-start: 2;
  grid-row-end: 3;
  padding: 1.25rem 0 1.5625rem; }
  .global-footer .l-center {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-pack: start;
        justify-content: flex-start; }
    .global-footer .l-center > * + * {
      margin-top: 1rem; }
  .global-footer a,
  .global-footer .copyright {
    font-size: 0.875rem;
    line-height: calc(20 / 14); }
  .global-footer a {
    color: #111; }
    .global-footer a:visited, .global-footer a:hover, .global-footer a:active {
      color: #111; }

.global-footer__links {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }
  .global-footer__links > ul {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    @media screen and (min-width: 64em) {
      .global-footer__links > ul {
        -webkit-margin-start: auto;
                margin-inline-start: auto; } }
  .global-footer__links .l-cluster > * {
    margin: 0 -0.625rem; }
  .global-footer__links .l-cluster.l-cluster > * > * {
    margin: 0 0.625rem; }
  .global-footer__links a:not([class]) {
    display: block;
    min-width: 2.75rem;
    padding-bottom: 0.75rem;
    padding-top: 0.75rem;
    text-align: center; }
  .global-footer__links .with-icon--larger {
    padding: 0.75rem; }
    .global-footer__links .with-icon--larger svg {
      height: 1.25rem;
      width: 1.25rem; }

/*------------------------------------*\
    #Templates
\*------------------------------------*/
/*------------------------------------*\
    #Default page
\*------------------------------------*/
.no-js .default .content {
  max-width: 46.3125rem; }

@supports (grid-column-gap: 10%) {
  @media screen and (min-width: 64em) {
    .default .content {
      display: -ms-grid;
      display: grid;
      grid-column-gap: 10%;
      -ms-grid-columns: 65% 25%;
          grid-template-columns: 65% 25%;
      grid-template-areas: "article related"; } }
  @media screen and (min-width: 64em) {
    .default .content article {
      grid-area: article; } }
  @media screen and (min-width: 64em) {
    .default .content .related {
      grid-area: related; } } }

.default .content article .component + .component {
  margin-top: 3.125rem; }

.default .content .related {
  border-top: solid 10px #005a9c;
  margin-top: 2.5rem;
  padding-top: 1.25rem; }

@supports (grid-column-gap: 10%) {
  @media screen and (min-width: 64em) {
    .default .content .related {
      margin-top: 0; } } }

@media screen and (min-width: 64em) {
  .default .content .related__inner {
    -webkit-border-start: solid 1px #bdbdbd;
            border-inline-start: solid 1px #bdbdbd;
    padding-left: 1.25rem;
    padding-right: 1.25rem; } }

.default .content .related ul a {
  display: inline-block;
  padding-bottom: 0.625rem;
  padding-top: 0.625rem; }

/*------------------------------------*\
    #Landing page
\*------------------------------------*/
.landing h1,
.ecosystem h1 {
  font-size: 2.125rem;
  line-height: calc(43 / 34); }
  @media screen and (min-width: 48em) {
    .landing h1,
    .ecosystem h1 {
      font-size: 3.75rem;
      line-height: calc(72 / 60); } }

.landing #breadcrumb,
.ecosystem #breadcrumb {
  background-color: #f8f8fb; }

.landing main,
.landing #main,
.ecosystem main,
.ecosystem #main {
  padding-top: 0; }

.landing .component--text,
.landing .component--image,
.landing .component--video,
.landing .component--quote,
.ecosystem .component--text,
.ecosystem .component--image,
.ecosystem .component--video,
.ecosystem .component--quote {
  margin-left: auto;
  margin-right: auto;
  max-width: 44.4375rem; }

.landing .component--quote,
.ecosystem .component--quote {
  max-width: 43.1875rem; }

.landing .component + .component,
.ecosystem .component + .component {
  margin-top: 3.125rem; }
  @media screen and (min-width: 48em) {
    .landing .component + .component,
    .ecosystem .component + .component {
      margin-top: 6.25rem; } }

.ecosystem .component.u-full-width + .component.u-full-width {
  margin-top: 0; }

/*------------------------------------*\
    #Utilities
\*------------------------------------*/
/*------------------------------------*\
    #Alignment utilities

    1. Logical property allows text-direction to change with `ltr`
\*------------------------------------*/
.u-float-left {
  float: left;
  float: inline-start;
  /* 1 */ }

.u-float-right {
  float: right;
  float: inline-end;
  /* 1 */ }

.u-text-center {
  text-align: center; }

.u-text-left {
  text-align: left;
  text-align: start;
  /* 1 */ }

.u-text-right {
  text-align: right;
  text-align: end;
  /* 1 */ }

/**
Change text-alignment at the "laptop" breakpoint,
as defined in /10-settings/breakpoints

1. Logical property allows text-direction to change with `ltr`
 */
@media screen and (min-width: 80em) {
  .u-text-left-from-lap {
    text-align: left;
    text-align: start;
    /* 1 */ } }

@media screen and (min-width: 80em) {
  .u-text-center-from-lap {
    text-align: center; } }

@media screen and (min-width: 80em) {
  .u-text-right-from-lap {
    text-align: right;
    text-align: end;
    /* 1 */ } }

/*------------------------------------*\
    #Clearfix utility

    https://css-tricks.com/snippets/css/clear-fix/

    Extend the clearfix placeholder with Sass to avoid
    having it appear over and over in your markup.
\*------------------------------------*/
/*------------------------------------*\
    #Layout utilities
\*------------------------------------*/
/**
For a full-viewport-width element inside a limited width parent.
The parent must be exactly centered in the browser in order for this
to work - see https://css-tricks.com/full-width-containers-limited-width-parents/
 */
.u-full-width {
  left: 50%;
  margin-left: -50vw;
  margin-right: -50vw;
  position: relative;
  right: 50%;
  width: 100vw; }

/**
To horizontally center a block-level item
 */
.u-center {
  margin-left: auto;
  margin-right: auto;
  position: relative; }
