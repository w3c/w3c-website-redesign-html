/*------------------------------------*\
    #Buttons
\*------------------------------------*/

/**
1. Because the `stack` mixin applies flexbox in the column direction,
we may need to prevent buttons from stretching horizontally
 */
button,
.button {

	//align-self: flex-start; /* 1 */
	background-color: $link-color;
	border: none;
	border-radius: rem(4);
	color: $white-pure;
	font-weight: $emphasis;
	padding: rem(10) rem(24);

	&:hover,
	&:focus,
	&:active {

		background-color: darken(#023dde, 10%);

	}

}



/**
2. High contrast themes tend to eliminate background-color. If there is no
border set, we need to apply a transparent outline to maintain the shape
of the button. The negative outline-offset moves the outline inside the
perimeter so it behaves like a border and doesn't add to the overall size.
 */
.button {

	border: 0;
	display: block;
	outline: $size-minus4 solid transparent; /* 2 */
	outline-offset: $size-minus4 * -1; /* 2 */
	text-decoration: none; // Remove link styling from links styled as buttons

}




button.button,
input[type="submit"].button {

	text-decoration: none; // Remove link styling from actual buttons styled as buttons

}


// For full-width buttons
.button--wide {

	text-align: center;
	width: 100%;

}


// For disabled buttons
.button[disabled],
.button.is-disabled {

	background-color: $grey;
	box-shadow: none;
	color: #3f3f3f;
	cursor: not-allowed;

	&:hover,
	&:focus,
	&:active {

		background-color: $grey;
		color: #3f3f3f;
		outline: 0;

	}

}


// For buttons with no background colour
.button--ghost {

	background-color: transparent;
	border: solid 1px;
	color: inherit;
	font-weight: normal;

	&:hover,
	&:focus,
	&:active {

		background-color: transparent;

	}

}


/**
Double specificity so links as buttons keep their styling even within
elements that would otherwise override it, without using !important
 */
.button--alert.button--alert {

	background-color: $alert-color;
	color: $black-pure;

	&:visited {

		background-color: $alert-color;
		color: $black-pure;

	}

	&:hover,
	&:focus,
	&:active {

		background-color: lighten($alert-color, 10%);

	}

}


.button--success.button--success {

	background-color: $success-color;
	color: $black-pure;

	&:visited {

		background-color: $success-color;
		color: $black-pure;

	}

	&:hover,
	&:focus,
	&:active {

		background-color: lighten($success-color, 10%);

	}

}


.button--warning.button--warning {

	background-color: $warning-color;
	color: $black-pure;

	&:visited {

		background-color: $warning-color;
		color: $black-pure;

	}

	&:hover,
	&:focus,
	&:active {

		background-color: lighten($warning-color, 10%);

	}

}